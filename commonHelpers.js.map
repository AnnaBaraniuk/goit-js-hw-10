{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet timeInterval = null;\nlet userSelectedDate = null;\nlet currentDate = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    timeInterval = userSelectedDate - new Date();\n    if (timeInterval < 1) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n    }else{startBtn.disabled = false;\n      inputTime.disabled = true;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  \n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst fp = flatpickr('#datetime-picker', options);\nconst inputTime = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button');\nconst showTime = document.querySelectorAll('.value');\nconsole.log(showTime);\nstartBtn.disabled = true;\nstartBtn.addEventListener('click', event => {\n  const repeatTime = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    event.preventDefault();\n    inputTime.disabled = true;\n    if (timeInterval < 1) {\n      startBtn.disabled = true;\n      inputTime.disabled = false;\n      clearInterval(repeatTime);\n      return;\n    }\n    const timer = convertMs(timeInterval);\n    showTime[0].innerText = timer.days.toString().padStart(2, '0');\n    showTime[1].innerText = timer.hours.toString().padStart(2, '0');\n    showTime[2].innerText = timer.minutes.toString().padStart(2, '0');\n    showTime[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});"],"names":["timeInterval","userSelectedDate","options","selectedDates","iziToast","startBtn","inputTime","convertMs","ms","days","hours","minutes","seconds","flatpickr","showTime","event","repeatTime","timer"],"mappings":"+IAKA,IAAIA,EAAe,KACfC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClCH,EAAeC,EAAmB,IAAI,KAClCD,EAAe,EACjBI,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,GACGC,EAAS,SAAW,GACxBC,EAAU,SAAW,GAExB,CACH,EAEA,SAASC,EAAUC,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACWC,EAAU,mBAAoBX,CAAO,EAChD,MAAMI,EAAY,SAAS,cAAc,kBAAkB,EACrDD,EAAW,SAAS,cAAc,QAAQ,EAC1CS,EAAW,SAAS,iBAAiB,QAAQ,EACnD,QAAQ,IAAIA,CAAQ,EACpBT,EAAS,SAAW,GACpBA,EAAS,iBAAiB,QAASU,GAAS,CAC1C,MAAMC,EAAa,YAAY,IAAM,CAInC,GAHAhB,EAAeC,EAAmB,IAAI,KACtCc,EAAM,eAAc,EACpBT,EAAU,SAAW,GACjBN,EAAe,EAAG,CACpBK,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrB,cAAcU,CAAU,EACxB,MACD,CACD,MAAMC,EAAQV,EAAUP,CAAY,EACpCc,EAAS,CAAC,EAAE,UAAYG,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7DH,EAAS,CAAC,EAAE,UAAYG,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DH,EAAS,CAAC,EAAE,UAAYG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEH,EAAS,CAAC,EAAE,UAAYG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACjE,EAAE,GAAI,CACT,CAAC"}